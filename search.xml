<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>RestHighLevelClientConfig配置类</title>
    <url>/2022/08/30/RestHighLevelClientConfig%E9%85%8D%E7%BD%AE%E7%B1%BB/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RestHighLevelClientConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RestHighLevelClient <span class="title function_">client</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RestHighLevelClient</span>(RestClient.builder(<span class="keyword">new</span> <span class="title class_">HttpHost</span>(EsConstant.ES_HOST,EsConstant.ES_PORT)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>-随心记</tag>
      </tags>
  </entry>
  <entry>
    <title>application.yaml 配置</title>
    <url>/2022/08/30/application-yaml-%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8084</span>  <span class="comment">#网址端口</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">searchservice</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/springcloud?useSSL=false&amp;serverTimezone=GMT%2B8&amp;characterEncoding=UTF8&amp;useUnicode=true</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span> <span class="comment">#数据库账号</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">1234</span> <span class="comment">#数据库密码</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span> <span class="comment">#8.0以上的mysql依赖要加cj 以下不加cj</span></span><br><span class="line">  <span class="attr">rabbitmq:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.115</span><span class="number">.130</span> <span class="comment">#虚拟机地址</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">5672</span></span><br><span class="line">    <span class="attr">virtual-host:</span> <span class="string">/</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">itcast</span> <span class="comment">#mq账号</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123321</span> <span class="comment">#mq密码</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="string">localhost:8848</span> <span class="comment"># nacos地址</span></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">com.hmall:</span> <span class="string">debug</span></span><br><span class="line">  <span class="attr">pattern:</span></span><br><span class="line">    <span class="attr">dateformat:</span> <span class="string">HH:mm:ss:SSS</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">cn.itcast.hotel.pojo</span> <span class="comment">#驼峰命名</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>categories</tag>
      </tags>
  </entry>
  <entry>
    <title>Jwt 工具类</title>
    <url>/2022/08/30/Jwt%20%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AppJwtUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// TOKEN的有效期一天（S）</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">TOKEN_TIME_OUT</span> <span class="operator">=</span> <span class="number">3_600</span>;</span><br><span class="line">    <span class="comment">// 加密KEY</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TOKEN_ENCRY_KEY</span> <span class="operator">=</span> <span class="string">&quot;MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY&quot;</span>;</span><br><span class="line">    <span class="comment">// 最小刷新间隔(S)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">REFRESH_TIME</span> <span class="operator">=</span> <span class="number">300</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生产ID</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getToken</span><span class="params">(Long id)</span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; claimMaps = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        claimMaps.put(<span class="string">&quot;id&quot;</span>,id);</span><br><span class="line">        <span class="type">long</span> <span class="variable">currentTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">return</span> Jwts.builder()</span><br><span class="line">                .setId(UUID.randomUUID().toString())</span><br><span class="line">                .setIssuedAt(<span class="keyword">new</span> <span class="title class_">Date</span>(currentTime))  <span class="comment">//签发时间</span></span><br><span class="line">                .setSubject(<span class="string">&quot;system&quot;</span>)  <span class="comment">//说明</span></span><br><span class="line">                .setIssuer(<span class="string">&quot;heima&quot;</span>) <span class="comment">//签发者信息</span></span><br><span class="line">                .setAudience(<span class="string">&quot;app&quot;</span>)  <span class="comment">//接收用户</span></span><br><span class="line">                .compressWith(CompressionCodecs.GZIP)  <span class="comment">//数据压缩方式</span></span><br><span class="line">                .signWith(SignatureAlgorithm.HS512, generalKey()) <span class="comment">//加密方式</span></span><br><span class="line">                .setExpiration(<span class="keyword">new</span> <span class="title class_">Date</span>(currentTime + TOKEN_TIME_OUT * <span class="number">1000</span>))  <span class="comment">//过期时间戳</span></span><br><span class="line">                .addClaims(claimMaps) <span class="comment">//cla信息</span></span><br><span class="line">                .compact();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取token中的claims信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Jws&lt;Claims&gt; <span class="title function_">getJws</span><span class="params">(String token)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Jwts.parser()</span><br><span class="line">                    .setSigningKey(generalKey())</span><br><span class="line">                    .parseClaimsJws(token);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取payload body信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Claims <span class="title function_">getClaimsBody</span><span class="params">(String token)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> getJws(token).getBody();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (ExpiredJwtException e)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取hearder body信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JwsHeader <span class="title function_">getHeaderBody</span><span class="params">(String token)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getJws(token).getHeader();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否过期</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> claims</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> -1：有效，0：有效，1：过期，2：过期</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">verifyToken</span><span class="params">(Claims claims)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(claims==<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            claims.getExpiration()</span><br><span class="line">                    .before(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">            <span class="comment">// 需要自动刷新TOKEN</span></span><br><span class="line">            <span class="keyword">if</span>((claims.getExpiration().getTime()-System.currentTimeMillis())&gt;REFRESH_TIME*<span class="number">1000</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ExpiredJwtException ex) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 由字符串生成加密key</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SecretKey <span class="title function_">generalKey</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">byte</span>[] encodedKey = Base64.getEncoder().encode(TOKEN_ENCRY_KEY.getBytes());</span><br><span class="line">        <span class="type">SecretKey</span> <span class="variable">key</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecretKeySpec</span>(encodedKey, <span class="number">0</span>, encodedKey.length, <span class="string">&quot;AES&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> key;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="comment">/* Map map = new HashMap();</span></span><br><span class="line"><span class="comment">        map.put(&quot;id&quot;,&quot;11&quot;);*/</span></span><br><span class="line">        System.out.println(AppJwtUtil.getToken(<span class="number">1102L</span>));</span><br><span class="line">        Jws&lt;Claims&gt; jws = AppJwtUtil.getJws(<span class="string">&quot;eyJhbGciOiJIUzUxMiIsInppcCI6IkdaSVAifQ.H4sIAAAAAAAAADWLQQqEMAwA_5KzhURNt_qb1KZYQSi0wi6Lf9942NsMw3zh6AVW2DYmDGl2WabkZgreCaM6VXzhFBfJMcMARTqsxIG9Z888QLui3e3Tup5Pb81013KKmVzJTGo11nf9n8v4nMUaEY73DzTabjmDAAAA.4SuqQ42IGqCgBai6qd4RaVpVxTlZIWC826QA9kLvt9d-yVUw82gU47HDaSfOzgAcloZedYNNpUcd18Ne8vvjQA&quot;</span>);</span><br><span class="line">        <span class="type">Claims</span> <span class="variable">claims</span> <span class="operator">=</span> jws.getBody();</span><br><span class="line">        System.out.println(claims.get(<span class="string">&quot;id&quot;</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>categories</tag>
      </tags>
  </entry>
  <entry>
    <title>getway配置</title>
    <url>/2022/08/30/getway%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>————-导入依赖———————–</p>
<!--网关-->
<dependency>
<groupId>org.springframework.cloud</groupId>
<artifactId>spring-cloud-starter-gateway</artifactId>
</dependency>
<!--nacos服务发现依赖-->
<dependency>
<groupId>com.alibaba.cloud</groupId>
<artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
</dependency>

<p>————-application.yml———————–</p>
<p>server:<br>port: 10010 # 网关端口<br>spring:<br>application:<br>name: gateway # 服务名称<br>cloud:<br>nacos:<br>server-addr: localhost:8848 # nacos地址<br>gateway:<br>routes: # 网关路由配置<br>- id: itemservice # 路由id，自定义，只要唯一即可<br>uri: lb:&#x2F;&#x2F;itemservice # 路由的目标地址 lb就是负载均衡，后面跟服务名称<br>predicates: # 路由断言，也就是判断请求是否符合路由规则的条件<br>- Path&#x3D;&#x2F;item&#x2F;** # 这个是按照路径匹配，只要以&#x2F;user&#x2F;开头就符合要求<br>- id: userservice<br>uri: lb:&#x2F;&#x2F;userservice<br>predicates:<br>- Path&#x3D;&#x2F;user&#x2F;<strong>,&#x2F;address&#x2F;</strong><br>- id: orderservice<br>uri: lb:&#x2F;&#x2F;orderservice<br>predicates:<br>- Path&#x3D;&#x2F;order&#x2F;<strong>,&#x2F;pay&#x2F;</strong><br>- id: searchservice<br>uri: lb:&#x2F;&#x2F;searchservice<br>predicates:<br>- Path&#x3D;&#x2F;search&#x2F;**<br># 。。。<br>globalcors: # 全局的跨域处理<br>add-to-simple-url-handler-mapping: true # 解决options请求被拦截问题<br>corsConfigurations:<br>‘[&#x2F;**]’:<br>allowedOrigins: # 允许哪些网站的跨域请求<br>- “<a href="http://localhost:9001&quot;">http://localhost:9001&quot;</a><br>- “<a href="http://127.0.0.1:9001&quot;">http://127.0.0.1:9001&quot;</a><br>- “<a href="http://localhost:9002&quot;">http://localhost:9002&quot;</a><br>- “<a href="http://127.0.0.1:9002&quot;">http://127.0.0.1:9002&quot;</a><br>allowedMethods: # 允许的跨域ajax的请求方式<br>- “GET”<br>- “POST”<br>- “DELETE”<br>- “PUT”<br>- “OPTIONS”<br>allowedHeaders: “*” # 允许在请求中携带的头信息<br>allowCredentials: true # 是否允许携带cookie<br>maxAge: 360000 # 这次跨域检测的有效期</p>
]]></content>
      <tags>
        <tag>-随心记</tag>
      </tags>
  </entry>
  <entry>
    <title>es 笔记</title>
    <url>/2022/08/30/es-%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>&#x2F;&#x2F; 自动补全查询<br>GET &#x2F;test3&#x2F;_search<br>{<br>“suggest”: {<br>“title_suggest”: {<br>“text”: “s”,<br>“completion”: {<br>“field”: “title”,<br>“skip_duplicates”: true,<br>“size”: 10<br>}<br>}<br>}<br>}</p>
<p>&#x2F;&#x2F; 示例数据<br>POST test3&#x2F;_doc<br>{<br>“title”: [“Sony”, “WH-1000XM3”]<br>}<br>POST test3&#x2F;_doc<br>{<br>“title”: [“SK-II”, “PITERA”]<br>}<br>POST test3&#x2F;_doc<br>{<br>“title”: [“Nintendo”, “switch”]<br>}</p>
<p>#自动补全 创建索引库<br>PUT test3<br>{<br>“mappings”: {<br>“properties”: {<br>“title”:{<br>“type”: “completion”<br>}<br>}<br>}<br>}<br>#自定义分词器<br>PUT &#x2F;test1<br>{<br>“settings”: {<br>“analysis”: {<br>“analyzer”: {<br>“my_analyzer”: {<br>“tokenizer”: “ik_max_word”,<br>“filter”: “py”<br>}<br>},<br>“filter”: {<br>“py”: {<br>“type”: “pinyin”,<br>“keep_full_pinyin”: false,<br>“keep_joined_full_pinyin”: true,<br>“keep_original”: true,<br>“limit_first_letter_length”: 16,<br>“remove_duplicated_term”: true,<br>“none_chinese_pinyin_tokenize”: false<br>}<br>}<br>}<br>},<br>“mappings”: {<br>“properties”: {<br>“name”: {<br>“type”: “text”,<br>“analyzer”: “my_analyzer”,<br>“search_analyzer”: “ik_smart”<br>}<br>}<br>}<br>}</p>
<p>#拼音分词器测试<br>POST &#x2F;_analyze<br>{<br>“text”: “如家酒店还不错”,<br>“analyzer”: “pinyin”<br>}</p>
<p># Metric聚合语法 我们对酒店按照品牌分组，形成了一个个桶。现在我们需要对桶内的酒店做运算，获取每个品牌的用户评分的min、max、avg等值。<br>GET &#x2F;hotel&#x2F;_search<br>{<br>“size”: 0,<br>“aggs”: {<br>“brandAgg”: {<br>“terms”: {<br>“field”: “brand”,<br>“size”: 20<br>},<br>“aggs”: {<br>“scoreAgg”: {<br>“stats”: {<br>“field”: “score”<br>}<br>}<br>}<br>}<br>}<br>}</p>
<p>#限定聚合范围<br>GET &#x2F;hotel&#x2F;_search<br>{<br>“query”: {<br>“range”: {<br>“price”: {<br>“gte”: 10<br>}<br>}<br>},<br>“size”: 0,<br>“aggs”: {<br>“brandAgg” :{<br>“terms”: {<br>“field”: “brand”,<br>“size”: 20<br>}<br>}<br>}<br>}</p>
<p>#单字段查询<br>GET &#x2F;hotel&#x2F;_search<br>{<br>“query”: {<br>“match”: {<br>“all”: “上海”<br>}<br>}<br>}</p>
<p>#查询全部<br>GET &#x2F;hotel&#x2F;_search<br>{<br>“query”: {<br>“match_all”: {}<br>}<br>}</p>
<p>#精准查询<br>GET &#x2F;hotel&#x2F;_search<br>{<br>“query”: {<br>“term”: {<br>“city”: {<br>“value”: “上海”<br>}<br>}<br>}<br>}</p>
<p>#多字段查询<br>GET &#x2F;hotel&#x2F;_search<br>{<br>“query”: {<br>“multi_match”: {<br>“query”: “上海”,<br>“fields”: [“name”,”brand”, “city”]<br>}<br>}<br>}</p>
<p>#范围查询—价格<br>GET &#x2F;hotel&#x2F;_search<br>{<br>“query”: {<br>“range”: {<br>“price”: {<br>“gte”: 1000,<br>“lte”: 2000<br>}<br>}<br>}<br>}</p>
<p>#矩形范围查询<br># geo_bounding_box查询<br>GET &#x2F;hotel&#x2F;_search<br>{<br>“query”: {<br>“geo_bounding_box”: {<br>“location”: {<br>“top_left”: {<br>“lat”: 31.1,<br>“lon”: 121.5<br>},<br>“bottom_right”: {<br>“lat”: 30.9,<br>“lon”: 121.7<br>}<br>}<br>}<br>}<br>}</p>
<p># geo_distance 查询<br>GET &#x2F;hotel&#x2F;_search<br>{<br>“query”: {<br>“geo_distance”: {<br>“distance”: “15km”,<br>“location”: “31.21,121.5”<br>}<br>}<br>}</p>
<p>#算分函数<br>GET &#x2F;hotel&#x2F;_search<br>{<br>“query”: {<br>“function_score”: {<br>“query”: {<br>“match”: {<br>“all”: “外滩”<br>}<br>},<br>“functions”: [<br>{<br>“filter”: {<br>“term”: {<br>“brand”: “如家”<br>}<br>},<br>“weight”: 10<br>}<br>],<br>“boost_mode”: “multiply”<br>}<br>}<br>}</p>
<p>#布尔查询<br>GET &#x2F;hotel&#x2F;_search<br>{<br>“query”: {<br>“bool”: {<br>“must”: [<br>{<br>“term”: {<br>“city”: {<br>“value”: “上海”<br>}<br>}<br>}<br>],<br>“should”: [<br>{<br>“term”: {<br>“brand”: {<br>“value”: “皇冠假日”<br>}<br>}<br>},<br>{<br>“term”: {<br>“brand”: {<br>“value”: “华美达”<br>}<br>}<br>}<br>],<br>“must_not”: [<br>{<br>“range”: {<br>“price”: {<br>“lte”: 500<br>}<br>}<br>}<br>],<br>“filter”: [<br>{<br>“range”: {<br>“score”: {<br>“gte”: 45<br>}<br>}<br>}<br>]</p>
<p>}<br>}<br>}</p>
<p>#经纬度查询<br>GET &#x2F;hotel&#x2F;_search<br>{<br>“query”: {<br>“bool”: {<br>“must”: [<br>{“term”: {“city”: “上海” }}<br>],<br>“should”: [<br>{“term”: {“brand”: “皇冠假日” }},<br>{“term”: {“brand”: “华美达” }}<br>],<br>“must_not”: [<br>{ “range”: { “price”: { “lte”: 500 } }}<br>],<br>“filter”: [<br>{ “range”: {“score”: { “gte”: 45 } }}<br>]<br>}<br>}<br>}</p>
<p>#酒店数据按照用户评价（score)降序排序，<br>#评价相同的按照价格(price)升序排序<br>#根据坐标进行升序<br>GET &#x2F;hotel&#x2F;_search<br>{<br>“query”: {<br>“match_all”: {}<br>},<br>“sort”: [<br>{<br>“score”: {<br>“order”: “desc”<br>}<br>},<br>{<br>“price”: {<br>“order”: “asc”<br>}<br>},<br>{<br>“_geo_distance”: {<br>“location”: {<br>“lat”: 31.034661,<br>“lon”: 121.612282<br>},<br>“order”: “asc”,<br>“unit”: “km”<br>}<br>}<br>],<br>“from”: 20,<br>“size”: 10</p>
<p>}</p>
<p>#基本分页<br>GET &#x2F;hotel&#x2F;_search<br>{<br>“query”: {<br>“match_all”: {}<br>},<br>“from”: 0,<br>“size”: 20,<br>“sort”: [<br>{<br>“price”: {<br>“order”: “desc”<br>}<br>}<br>]<br>}</p>
<p>#深度分页<br>GET &#x2F;hotel&#x2F;_search<br>{<br>“query”: {<br>“match_all”: {}<br>},<br>“from”: 990,<br>“size”: 10,<br>“sort”: [<br>{<br>“price”: {<br>“order”: “asc”<br>}<br>}<br>]<br>}</p>
<p>#搜索名称中包含如家的酒店，且对名称进行高亮<br>GET &#x2F;hotel&#x2F;_search<br>{<br>“query”: {<br>“match”: {<br>“name”: “如家”<br>}<br>},<br>“highlight”: {<br>“fields”: {<br>“name”: {<br>“pre_tags”: “<em>“,<br>“post_tags”: “</em>“<br>}<br>}<br>}<br>}</p>
<p>#搜索all中有如家的数据<br>GET &#x2F;hotel&#x2F;_search<br>{<br>“query”: {<br>“match”: {<br>“all”: “如家”<br>}<br>},<br>“highlight”: {<br>“fields”: {<br>“name”: {<br>“require_field_match”: “false”<br>}<br>}<br>}<br>}</p>
<p>GET &#x2F;hotel</p>
<p>GET _search<br>{<br>“query”: {<br>“match_all”: {}<br>}<br>}</p>
<p>#查询索引库<br>GET &#x2F;heima</p>
<p>#修改索引库<br>PUT &#x2F;heima&#x2F;_mapping<br>{<br>“properties”:{<br>“age”:{<br>“type”:”integer”<br>}<br>}<br>}</p>
<p>#新增文档<br>POST &#x2F;heima&#x2F;_doc&#x2F;1<br>{<br>“info”: “黑马练习生”,<br>“email”: “<a href="mailto:&#x31;&#56;&#x31;&#x30;&#x35;&#56;&#x39;&#57;&#x30;&#57;&#x36;&#64;&#49;&#54;&#51;&#x2e;&#x63;&#x6f;&#x6d;">&#x31;&#56;&#x31;&#x30;&#x35;&#56;&#x39;&#57;&#x30;&#57;&#x36;&#64;&#49;&#54;&#51;&#x2e;&#x63;&#x6f;&#x6d;</a>“,<br>“name”:{<br>“fristName”: “文范”,<br>“lastName”: “王”<br>}<br>}</p>
<p>#查询文档<br>GET &#x2F;heima&#x2F;_doc&#x2F;1</p>
<p>DELETE &#x2F;hotel</p>
<p>GET &#x2F;hotel&#x2F;_doc&#x2F;36934</p>
<p># 商品数据索引库<br>PUT &#x2F;item<br>{<br>“settings”: {<br>“analysis”: {<br>“analyzer”: {<br>“text_anlyzer”: {<br>“tokenizer”: “ik_max_word”,<br>“filter”: “py”<br>},<br>“completion_analyzer”: {<br>“tokenizer”: “keyword”,<br>“filter”: “py”<br>}<br>},<br>“filter”: {<br>“py”: {<br>“type”: “pinyin”,<br>“keep_full_pinyin”: false,<br>“keep_joined_full_pinyin”: true,<br>“keep_original”: true,<br>“limit_first_letter_length”: 16,<br>“remove_duplicated_term”: true,<br>“none_chinese_pinyin_tokenize”: false<br>}<br>}<br>}<br>},<br>“mappings”: {<br>“properties”: {<br>“id”:{<br>“type”: “keyword”<br>},<br>“name”:{<br>“type”: “text”,<br>“analyzer”: “text_anlyzer”,<br>“search_analyzer”: “ik_smart”,<br>“copy_to”: “all”<br>},<br>“category”:{<br>“type”: “keyword”,<br>“copy_to”: “all”<br>},<br>“brand”:{<br>“type”: “keyword”,<br>“copy_to”: “all”<br>},<br>“price”:{<br>“type”: “long”<br>},<br>“sold”:{<br>“type”: “integer”<br>},<br>“image”:{<br>“type”: “keyword”,<br>“index”: false<br>},<br>“commentCount”:{<br>“type”: “integer”,<br>“index”: false<br>},<br>“isAD”:{<br>“type”: “boolean”<br>},<br>“all”:{<br>“type”: “text”,<br>“analyzer”: “text_anlyzer”,<br>“search_analyzer”: “ik_smart”<br>},<br>“suggestion”:{<br>“type”: “completion”,<br>“analyzer”: “completion_analyzer”<br>}<br>}<br>}<br>}</p>
]]></content>
      <tags>
        <tag>-随心记</tag>
      </tags>
  </entry>
  <entry>
    <title>config</title>
    <url>/2022/08/30/config/</url>
    <content><![CDATA[<p>@Configuration<br>public class MybatisPlusConfig {</p>
<p>@Bean<br>public MybatisPlusInterceptor mybatisPlusInterceptor(){<br>&#x2F;&#x2F;1 创建MybatisPlusInterceptor拦截器对象<br>MybatisPlusInterceptor mpInterceptor&#x3D;new MybatisPlusInterceptor();<br>&#x2F;&#x2F;2 添加分页拦截器<br>mpInterceptor.addInnerInterceptor(new PaginationInnerInterceptor());<br>return mpInterceptor;<br>}</p>
<p>}</p>
]]></content>
      <tags>
        <tag>-随心记</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx conf 配置</title>
    <url>/2022/08/30/nginx-conf-%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>server {<br>listen 9001;<br>server_name localhost;</p>
<p>location &#x2F; {<br>root hm-mall-admin;<br>index index.html index.htm;<br>}<br>error_page 500 502 503 504 &#x2F;50x.html;<br>location &#x3D; &#x2F;50x.html {<br>root html;<br>}<br>}</p>
<p>server {<br>listen 9002;<br>server_name localhost;</p>
<p>location &#x2F; {<br>root hm-mall-portal;<br>index index.html index.htm;<br>}</p>
<p>error_page 500 502 503 504 &#x2F;50x.html;<br>location &#x3D; &#x2F;50x.html {<br>root html;<br>}</p>
<p>}</p>
]]></content>
      <tags>
        <tag>-随心记</tag>
      </tags>
  </entry>
  <entry>
    <title>文件上传工具类</title>
    <url>/2022/08/30/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">FileStorageService</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  上传图片文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> prefix  文件前缀</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filename  文件名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> inputStream 文件流</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>  文件全路径</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">uploadImgFile</span><span class="params">(String prefix, String filename,InputStream inputStream)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  上传html文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> prefix  文件前缀</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filename   文件名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> inputStream  文件流</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>  文件全路径</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">uploadHtmlFile</span><span class="params">(String prefix, String filename,InputStream inputStream)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pathUrl  文件全路径</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(String pathUrl)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 下载文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pathUrl  文件全路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">byte</span>[]  downLoadFile(String pathUrl);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>-随心记</tag>
      </tags>
  </entry>
  <entry>
    <title>统一返回结果</title>
    <url>/2022/08/30/%E7%BB%9F%E4%B8%80%E8%BF%94%E5%9B%9E%E7%BB%93%E6%9E%9C/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hmall.item;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Result</span>&lt;T&gt; <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回的状态</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> status;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回的提示信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回的结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> T data;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 方法成功返回的结果</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;T&gt; <span class="title function_">success</span><span class="params">(T data, String message)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.message = message;</span><br><span class="line">        <span class="built_in">this</span>.status = <span class="literal">true</span>;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 方法失败返回的结果</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;T&gt; <span class="title function_">error</span><span class="params">(T data, String message)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.message = message;</span><br><span class="line">        <span class="built_in">this</span>.status = <span class="literal">false</span>;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>-随心记</tag>
      </tags>
  </entry>
  <entry>
    <title>随机生成验证码</title>
    <url>/2022/08/30/%E9%9A%8F%E6%9C%BA%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.reggie.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 随机生成验证码工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ValidateCodeUtils</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 随机生成验证码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> length 长度为4位或者6位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title function_">generateValidateCode</span><span class="params">(<span class="type">int</span> length)</span>&#123;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">code</span> <span class="operator">=</span><span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(length == <span class="number">4</span>)&#123;</span><br><span class="line">            code = <span class="keyword">new</span> <span class="title class_">Random</span>().nextInt(<span class="number">9999</span>);<span class="comment">//生成随机数，最大为9999</span></span><br><span class="line">            <span class="keyword">if</span>(code &lt; <span class="number">1000</span>)&#123;</span><br><span class="line">                code = code + <span class="number">1000</span>;<span class="comment">//保证随机数为4位数字</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(length == <span class="number">6</span>)&#123;</span><br><span class="line">            code = <span class="keyword">new</span> <span class="title class_">Random</span>().nextInt(<span class="number">999999</span>);<span class="comment">//生成随机数，最大为999999</span></span><br><span class="line">            <span class="keyword">if</span>(code &lt; <span class="number">100000</span>)&#123;</span><br><span class="line">                code = code + <span class="number">100000</span>;<span class="comment">//保证随机数为6位数字</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;只能生成4位或6位数字验证码&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 随机生成指定长度字符串验证码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> length 长度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">generateValidateCode4String</span><span class="params">(<span class="type">int</span> length)</span>&#123;</span><br><span class="line">        <span class="type">Random</span> <span class="variable">rdm</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">hash1</span> <span class="operator">=</span> Integer.toHexString(rdm.nextInt());</span><br><span class="line">        <span class="type">String</span> <span class="variable">capstr</span> <span class="operator">=</span> hash1.substring(<span class="number">0</span>, length);</span><br><span class="line">        <span class="keyword">return</span> capstr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>-随心记</tag>
      </tags>
  </entry>
</search>
